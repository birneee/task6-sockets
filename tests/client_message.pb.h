// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client_message.proto

#ifndef PROTOBUF_client_5fmessage_2eproto__INCLUDED
#define PROTOBUF_client_5fmessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace sockets {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_client_5fmessage_2eproto();
void protobuf_AssignDesc_client_5fmessage_2eproto();
void protobuf_ShutdownFile_client_5fmessage_2eproto();

class client_msg;
class client_msg_OperationData;

enum client_msg_OperationType {
  client_msg_OperationType_ADD = 0,
  client_msg_OperationType_SUB = 1,
  client_msg_OperationType_TERMINATION = 2,
  client_msg_OperationType_RANDOM_DATA = 3
};
bool client_msg_OperationType_IsValid(int value);
const client_msg_OperationType client_msg_OperationType_OperationType_MIN = client_msg_OperationType_ADD;
const client_msg_OperationType client_msg_OperationType_OperationType_MAX = client_msg_OperationType_RANDOM_DATA;
const int client_msg_OperationType_OperationType_ARRAYSIZE = client_msg_OperationType_OperationType_MAX + 1;

const ::google::protobuf::EnumDescriptor* client_msg_OperationType_descriptor();
inline const ::std::string& client_msg_OperationType_Name(client_msg_OperationType value) {
  return ::google::protobuf::internal::NameOfEnum(
    client_msg_OperationType_descriptor(), value);
}
inline bool client_msg_OperationType_Parse(
    const ::std::string& name, client_msg_OperationType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<client_msg_OperationType>(
    client_msg_OperationType_descriptor(), name, value);
}
// ===================================================================

class client_msg_OperationData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sockets.client_msg.OperationData) */ {
 public:
  client_msg_OperationData();
  virtual ~client_msg_OperationData();

  client_msg_OperationData(const client_msg_OperationData& from);

  inline client_msg_OperationData& operator=(const client_msg_OperationData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const client_msg_OperationData& default_instance();

  void Swap(client_msg_OperationData* other);

  // implements Message ----------------------------------------------

  inline client_msg_OperationData* New() const { return New(NULL); }

  client_msg_OperationData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const client_msg_OperationData& from);
  void MergeFrom(const client_msg_OperationData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(client_msg_OperationData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .sockets.client_msg.OperationType type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::sockets::client_msg_OperationType type() const;
  void set_type(::sockets::client_msg_OperationType value);

  // optional int32 argument = 2;
  bool has_argument() const;
  void clear_argument();
  static const int kArgumentFieldNumber = 2;
  ::google::protobuf::int32 argument() const;
  void set_argument(::google::protobuf::int32 value);

  // optional string random_data = 3;
  bool has_random_data() const;
  void clear_random_data();
  static const int kRandomDataFieldNumber = 3;
  const ::std::string& random_data() const;
  void set_random_data(const ::std::string& value);
  void set_random_data(const char* value);
  void set_random_data(const char* value, size_t size);
  ::std::string* mutable_random_data();
  ::std::string* release_random_data();
  void set_allocated_random_data(::std::string* random_data);

  // @@protoc_insertion_point(class_scope:sockets.client_msg.OperationData)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_argument();
  inline void clear_has_argument();
  inline void set_has_random_data();
  inline void clear_has_random_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int type_;
  ::google::protobuf::int32 argument_;
  ::google::protobuf::internal::ArenaStringPtr random_data_;
  friend void  protobuf_AddDesc_client_5fmessage_2eproto();
  friend void protobuf_AssignDesc_client_5fmessage_2eproto();
  friend void protobuf_ShutdownFile_client_5fmessage_2eproto();

  void InitAsDefaultInstance();
  static client_msg_OperationData* default_instance_;
};
// -------------------------------------------------------------------

class client_msg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sockets.client_msg) */ {
 public:
  client_msg();
  virtual ~client_msg();

  client_msg(const client_msg& from);

  inline client_msg& operator=(const client_msg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const client_msg& default_instance();

  void Swap(client_msg* other);

  // implements Message ----------------------------------------------

  inline client_msg* New() const { return New(NULL); }

  client_msg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const client_msg& from);
  void MergeFrom(const client_msg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(client_msg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef client_msg_OperationData OperationData;

  typedef client_msg_OperationType OperationType;
  static const OperationType ADD =
    client_msg_OperationType_ADD;
  static const OperationType SUB =
    client_msg_OperationType_SUB;
  static const OperationType TERMINATION =
    client_msg_OperationType_TERMINATION;
  static const OperationType RANDOM_DATA =
    client_msg_OperationType_RANDOM_DATA;
  static inline bool OperationType_IsValid(int value) {
    return client_msg_OperationType_IsValid(value);
  }
  static const OperationType OperationType_MIN =
    client_msg_OperationType_OperationType_MIN;
  static const OperationType OperationType_MAX =
    client_msg_OperationType_OperationType_MAX;
  static const int OperationType_ARRAYSIZE =
    client_msg_OperationType_OperationType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  OperationType_descriptor() {
    return client_msg_OperationType_descriptor();
  }
  static inline const ::std::string& OperationType_Name(OperationType value) {
    return client_msg_OperationType_Name(value);
  }
  static inline bool OperationType_Parse(const ::std::string& name,
      OperationType* value) {
    return client_msg_OperationType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .sockets.client_msg.OperationData ops = 3;
  int ops_size() const;
  void clear_ops();
  static const int kOpsFieldNumber = 3;
  const ::sockets::client_msg_OperationData& ops(int index) const;
  ::sockets::client_msg_OperationData* mutable_ops(int index);
  ::sockets::client_msg_OperationData* add_ops();
  ::google::protobuf::RepeatedPtrField< ::sockets::client_msg_OperationData >*
      mutable_ops();
  const ::google::protobuf::RepeatedPtrField< ::sockets::client_msg_OperationData >&
      ops() const;

  // @@protoc_insertion_point(class_scope:sockets.client_msg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::sockets::client_msg_OperationData > ops_;
  friend void  protobuf_AddDesc_client_5fmessage_2eproto();
  friend void protobuf_AssignDesc_client_5fmessage_2eproto();
  friend void protobuf_ShutdownFile_client_5fmessage_2eproto();

  void InitAsDefaultInstance();
  static client_msg* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// client_msg_OperationData

// required .sockets.client_msg.OperationType type = 1;
inline bool client_msg_OperationData::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void client_msg_OperationData::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void client_msg_OperationData::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void client_msg_OperationData::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::sockets::client_msg_OperationType client_msg_OperationData::type() const {
  // @@protoc_insertion_point(field_get:sockets.client_msg.OperationData.type)
  return static_cast< ::sockets::client_msg_OperationType >(type_);
}
inline void client_msg_OperationData::set_type(::sockets::client_msg_OperationType value) {
  assert(::sockets::client_msg_OperationType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:sockets.client_msg.OperationData.type)
}

// optional int32 argument = 2;
inline bool client_msg_OperationData::has_argument() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void client_msg_OperationData::set_has_argument() {
  _has_bits_[0] |= 0x00000002u;
}
inline void client_msg_OperationData::clear_has_argument() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void client_msg_OperationData::clear_argument() {
  argument_ = 0;
  clear_has_argument();
}
inline ::google::protobuf::int32 client_msg_OperationData::argument() const {
  // @@protoc_insertion_point(field_get:sockets.client_msg.OperationData.argument)
  return argument_;
}
inline void client_msg_OperationData::set_argument(::google::protobuf::int32 value) {
  set_has_argument();
  argument_ = value;
  // @@protoc_insertion_point(field_set:sockets.client_msg.OperationData.argument)
}

// optional string random_data = 3;
inline bool client_msg_OperationData::has_random_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void client_msg_OperationData::set_has_random_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void client_msg_OperationData::clear_has_random_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void client_msg_OperationData::clear_random_data() {
  random_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_random_data();
}
inline const ::std::string& client_msg_OperationData::random_data() const {
  // @@protoc_insertion_point(field_get:sockets.client_msg.OperationData.random_data)
  return random_data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void client_msg_OperationData::set_random_data(const ::std::string& value) {
  set_has_random_data();
  random_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sockets.client_msg.OperationData.random_data)
}
inline void client_msg_OperationData::set_random_data(const char* value) {
  set_has_random_data();
  random_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sockets.client_msg.OperationData.random_data)
}
inline void client_msg_OperationData::set_random_data(const char* value, size_t size) {
  set_has_random_data();
  random_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sockets.client_msg.OperationData.random_data)
}
inline ::std::string* client_msg_OperationData::mutable_random_data() {
  set_has_random_data();
  // @@protoc_insertion_point(field_mutable:sockets.client_msg.OperationData.random_data)
  return random_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* client_msg_OperationData::release_random_data() {
  // @@protoc_insertion_point(field_release:sockets.client_msg.OperationData.random_data)
  clear_has_random_data();
  return random_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void client_msg_OperationData::set_allocated_random_data(::std::string* random_data) {
  if (random_data != NULL) {
    set_has_random_data();
  } else {
    clear_has_random_data();
  }
  random_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), random_data);
  // @@protoc_insertion_point(field_set_allocated:sockets.client_msg.OperationData.random_data)
}

// -------------------------------------------------------------------

// client_msg

// repeated .sockets.client_msg.OperationData ops = 3;
inline int client_msg::ops_size() const {
  return ops_.size();
}
inline void client_msg::clear_ops() {
  ops_.Clear();
}
inline const ::sockets::client_msg_OperationData& client_msg::ops(int index) const {
  // @@protoc_insertion_point(field_get:sockets.client_msg.ops)
  return ops_.Get(index);
}
inline ::sockets::client_msg_OperationData* client_msg::mutable_ops(int index) {
  // @@protoc_insertion_point(field_mutable:sockets.client_msg.ops)
  return ops_.Mutable(index);
}
inline ::sockets::client_msg_OperationData* client_msg::add_ops() {
  // @@protoc_insertion_point(field_add:sockets.client_msg.ops)
  return ops_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::sockets::client_msg_OperationData >*
client_msg::mutable_ops() {
  // @@protoc_insertion_point(field_mutable_list:sockets.client_msg.ops)
  return &ops_;
}
inline const ::google::protobuf::RepeatedPtrField< ::sockets::client_msg_OperationData >&
client_msg::ops() const {
  // @@protoc_insertion_point(field_list:sockets.client_msg.ops)
  return ops_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace sockets

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::sockets::client_msg_OperationType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::sockets::client_msg_OperationType>() {
  return ::sockets::client_msg_OperationType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_client_5fmessage_2eproto__INCLUDED
